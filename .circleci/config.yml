# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

base_image: &base_image
  docker:
    - image: jdrouet/docker-with-buildx:stable


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/jobs-steps/#jobs-overview & https://circleci.com/docs/configuration-reference/#jobs
jobs:
  unit_test:
    docker:
      - image: python:3.10-slim
    steps:
      - checkout
      - run:
          name: Install dependencies and test with pytest
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r app/requirements.txt
            pytest --cov=app

  get_latest_tag:
    <<: *base_image
    steps:
      - checkout
      - run:
          name: Get latest git tag and increase SemVer
          command: |
            cd ./tagging
            mkdir /tmp/workspace
            bash ./git_tagging.sh -v patch >> /tmp/workspace/bash.env
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - bash.env


  build:
    <<: *base_image
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: cat bash.env >> $BASH_ENV
      - run: printenv git_tag
      - checkout
      - setup_remote_docker:
          version: default
          docker_layer_caching: true
      - run:
          name: docker login
          command: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_TOKEN"
      - run:
          name: build docker image and push to docker hub
          command: |
            docker buildx create --use
            if [ $BRANCH_NAME = main ]; then
              docker buildx build --platform linux/arm64,linux/amd64  --tag "$IMAGE_NAME":latest --tag "$IMAGE_NAME":"$git_tag" ./app/
            else
              docker buildx build --platform linux/arm64,linux/amd64  --tag "$IMAGE_NAME":dev --tag "$IMAGE_NAME":"$git_tag"-dev ./app/
            fi
    environment:
      IMAGE_NAME: ahmadalsajid/fast-app
      BRANCH_NAME: << pipeline.git.branch >>

workflows:
  build_and_deploy:
    jobs:
      - unit_test
      - get_latest_tag
      - build:
          context: fastappcci_<< pipeline.git.branch >>
          filters:
            branches:
              only:
                - main
                - dev
          requires:
            - unit_test
            - get_latest_tag